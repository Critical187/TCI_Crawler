group 'tci'
version '1.0-SNAPSHOT'


buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'war'
apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'

gretty {
    integrationTestTask = 'integrationTest'
}

jar {
    baseName = 'gs-rest-TCI_Crawler.service'
    version =  '0.1.0'
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }

    }
}
configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}
repositories {
    mavenCentral()
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'pl.pragmatists', name: 'JUnitParams', version: '1.0.4'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'

    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.14'
    compile "com.sun.jersey:jersey-json:1.9.1"
    compile 'org.jsoup:jsoup:1.8.1'
    compile 'org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1'
    compile group: 'com.owlike', name: 'genson', version: '0.94'
    integrationTestCompile 'org.assertj:assertj-core:3.0.0'
    integrationTestCompile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.4'
    integrationTestCompile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.8'


}
task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    check.dependsOn integrationTest
    integrationTest.mustRunAfter test
}

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}